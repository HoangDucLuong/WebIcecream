@using X.PagedList.Mvc.Core;

@model X.PagedList.IPagedList<WebIcecream_FE_ADMIN.Models.ProductViewModel>

@{
    ViewData["Title"] = "Product List";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Product List</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<div class="table-responsive">
    <div class="mb-3">
        <form method="get" action="@Url.Action("Index")">
            <div class="input-group">
                <input type="text" name="searchString" class="form-control" placeholder="Search by title..." />
                <div class="input-group-append">
                    <button type="submit" class="btn btn-outline-secondary">Search</button>
                </div>
            </div>
        </form>
    </div>
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>#</th>
                <th>Title</th>
                <th>Description</th>
                <th>Image</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.BookId</td>
                    <td>@item.Title</td>
                    <td>@Html.Raw(item.Description)</td>
                    <td>
                        <img src="@item.ImageUrl" alt="Product Image" class="img-thumbnail" style="max-width: 100px; max-height: 100px;" />
                    </td>
                    <td>@item.Price.ToString("C")</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.BookId" class="btn btn-primary btn-sm">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.BookId" class="btn btn-danger btn-sm"
                           onclick="return confirm('Are you sure you want to delete this product?');">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.PageCount > 1)
{
    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>
                </li>
            }
        </ul>
    </nav>
}
