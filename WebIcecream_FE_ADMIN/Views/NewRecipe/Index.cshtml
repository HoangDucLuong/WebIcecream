@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<WebIcecream_FE_ADMIN.Models.NewRecipeViewModel>


@{
    ViewData["Title"] = "New Recipe Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .table th, .table td {
        padding: 1rem;
    }

    .section-title {
        font-size: 2.5rem;
        margin-bottom: 2rem;
    }

    .btn {
        margin-right: 0.5rem;
    }

    img {
        max-width: 100px;
        max-height: 100px;
    }
</style>

<div class="container-fluid py-5">
    <div class="row mb-4">
        <div class="col text-center">
            <h1 class="section-title position-relative d-inline-block">Recipe Management</h1>
        </div>
    </div>

    

    <div class="row">
        <div class="col">
            <div class="table-responsive">
                <div class="mb-3">
                    <form method="get" action="@Url.Action("Index")">
                        <div class="input-group">
                            <input type="text" name="searchString" class="form-control" placeholder="Search by Flavor..." />
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-outline-secondary">Search</button>
                            </div>
                        </div>
                    </form>
                </div>
                <table class="table table-bordered table-striped">
                    <thead class="thead-dark">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.First().RecipeId)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Flavor)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Ingredients)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Procedure)</th>
                            <th>@Html.DisplayNameFor(model => model.First().ImageUrl)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Status)</th>
                            
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.RecipeId)</td>
                                <td>@Html.DisplayFor(modelItem => item.Flavor)</td>
                                <td>@Html.DisplayFor(modelItem => item.Ingredients)</td>
                                <td>@Html.Raw(item.Procedure)</td>
                                <td>
                                    <img src="@item.ImageUrl" alt="Recipe Image" />
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                <td>
                                    @if (item.Status == "waiting")
                                    {
                                        <form asp-action="Approve" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@item.RecipeId" />
                                            <button type="submit" class="btn btn-sm btn-success"><i class="fa fa-check"></i> Approve</button>
                                        </form>
                                    }                   
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
       
    </div>
    
    <div class="text-center">
        <ul class="pagination" id="pagination"></ul>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            var rowsShown = 10;
            var rowsTotal = $('#recipeTable tbody tr').length;
            var numPages = Math.ceil(rowsTotal / rowsShown);
            for (var i = 0; i < numPages; i++) {
                var pageNum = i + 1;
                $('#pagination').append('<li class="page-item"><a href="#" class="page-link" rel="' + i + '">' + pageNum + '</a></li>');
            }
            $('#recipeTable tbody tr').hide();
            $('#recipeTable tbody tr').slice(0, rowsShown).show();
            $('#pagination li:first').addClass('active');
            $('#pagination a').bind('click', function (e) {
                e.preventDefault();
                $('#pagination li').removeClass('active');
                $(this).parent().addClass('active');
                var currPage = $(this).attr('rel');
                var startItem = currPage * rowsShown;
                var endItem = startItem + rowsShown;
                $('#recipeTable tbody tr').css('opacity', '0.0').hide().slice(startItem, endItem)
                    .css('display', 'table-row').animate({ opacity: 1 }, 300);
            });
        });
    </script>
}
@if (Model.PageCount > 1)
{
    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>
                </li>
            }
        </ul>
    </nav>
}
